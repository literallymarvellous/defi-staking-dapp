/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleExternalContract,
  ExampleExternalContractInterface,
} from "../ExampleExternalContract";

const _abi = [
  {
    inputs: [],
    name: "complete",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "completed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060ee8061001f6000396000f3fe60806040526004361060265760003560e01c8063522e117714602b5780639d9a7fe9146033575b600080fd5b60316059565b005b348015603e57600080fd5b5060456075565b60405160509190609f565b60405180910390f35b60016000806101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1681565b60008115159050919050565b6099816086565b82525050565b600060208201905060b260008301846092565b9291505056fea2646970667358221220335e1a16a8acfe3b5451f523f748b80c2a68cd7602a79aec74d339cf77d27e4364736f6c634300080c0033";

type ExampleExternalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleExternalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleExternalContract__factory extends ContractFactory {
  constructor(...args: ExampleExternalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExampleExternalContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleExternalContract> {
    return super.deploy(overrides || {}) as Promise<ExampleExternalContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleExternalContract {
    return super.attach(address) as ExampleExternalContract;
  }
  connect(signer: Signer): ExampleExternalContract__factory {
    return super.connect(signer) as ExampleExternalContract__factory;
  }
  static readonly contractName: "ExampleExternalContract";
  public readonly contractName: "ExampleExternalContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleExternalContractInterface {
    return new utils.Interface(_abi) as ExampleExternalContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleExternalContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleExternalContract;
  }
}
