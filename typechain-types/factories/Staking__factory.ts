/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    inputs: [],
    name: "THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dappToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "getUserSingleTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPricefeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensStaked",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniqueTokensStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "unstakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022d9380380620022d98339818101604052810190620000379190620001f0565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000222565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b6000620001b88262000197565b9050919050565b620001ca81620001ab565b8114620001d657600080fd5b50565b600081519050620001ea81620001bf565b92915050565b60006020828403121562000209576200020862000172565b5b60006200021984828501620001d9565b91505092915050565b6120a780620002326000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063e5cfeeb511610071578063e5cfeeb5146102cd578063e744092e146102fd578063f1c5d6c21461032d578063f2fde38b1461035e578063fd5e6dd11461037a57610116565b80638da5cb5b1461021f578063af3f5e221461023d578063b83e02341461026d578063d39d81fc1461029d57610116565b80635eb186f8116100e95780635eb186f8146101b357806360ab5852146101d1578063715018a6146101db578063785ffb37146101e55780637acb77571461020357610116565b8063171e44ea1461011b578063276b11da146101375780632d1ad8b81461016757806335ea412914610183575b600080fd5b61013560048036038101906101309190611477565b6103aa565b005b610151600480360381019061014c91906114d0565b610481565b60405161015e9190611529565b60405180910390f35b610181600480360381019061017c9190611477565b61053c565b005b61019d60048036038101906101989190611477565b6107b1565b6040516101aa9190611553565b60405180910390f35b6101bb6107e4565b6040516101c891906115cd565b60405180910390f35b6101d961080a565b005b6101e361099f565b005b6101ed610a27565b6040516101fa9190611529565b60405180910390f35b61021d60048036038101906102189190611614565b610a33565b005b610227610d5e565b6040516102349190611553565b60405180910390f35b61025760048036038101906102529190611654565b610d87565b6040516102649190611529565b60405180910390f35b61028760048036038101906102829190611654565b610f0c565b6040516102949190611529565b60405180910390f35b6102b760048036038101906102b29190611681565b610f24565b6040516102c49190611529565b60405180910390f35b6102e760048036038101906102e291906116c1565b610f49565b6040516102f491906115cd565b60405180910390f35b61031760048036038101906103129190611477565b610f97565b604051610324919061171c565b60405180910390f35b61034760048036038101906103429190611477565b610fb7565b604051610355929190611737565b60405180910390f35b61037860048036038101906103739190611654565b61111f565b005b610394600480360381019061038f9190611760565b611217565b6040516103a19190611553565b60405180910390f35b6103b2611256565b73ffffffffffffffffffffffffffffffffffffffff166103d0610d5e565b73ffffffffffffffffffffffffffffffffffffffff1614610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d906117ea565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080600061048f84610fb7565b9150915080600a6104a0919061196c565b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052891906119b7565b6105329190611a40565b9250505092915050565b60026001541415610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057990611abd565b60405180910390fd5b60026001819055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590611b29565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107209190611b49565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610762929190611b7d565b6020604051808303816000875af1158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a59190611bd2565b50506001808190555050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610812611256565b73ffffffffffffffffffffffffffffffffffffffff16610830610d5e565b73ffffffffffffffffffffffffffffffffffffffff1614610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d906117ea565b60405180910390fd5b60005b60078054905081101561099c576000600782815481106108ac576108ab611bff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006108e482610d87565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610943929190611b7d565b6020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109869190611bd2565b505050808061099490611c2e565b915050610889565b50565b6109a7611256565b73ffffffffffffffffffffffffffffffffffffffff166109c5610d5e565b73ffffffffffffffffffffffffffffffffffffffff1614610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906117ea565b60405180910390fd5b610a25600061125e565b565b670de0b6b3a764000081565b60026001541415610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7090611abd565b60405180910390fd5b600260018190555060008211610ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abb90611cc3565b60405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790611d2f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b8d93929190611d4f565b6020604051808303816000875af1158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611bd2565b50610bdb3382611322565b7febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a8183604051610c0c929190611d86565b60405180910390a181600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ca09190611daf565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610d53576007339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600180819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600090506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790611e51565b60405180910390fd5b60005b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610f0257610ee284600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610eb257610eb1611bff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610481565b82610eed9190611daf565b91508080610efa90611c2e565b915050610e13565b5080915050919050565b60046020528060005260406000206000915090505481565b6002602052816000526040600020602052806000526040600020600091509150505481565b60056020528160005260406000208181548110610f6557600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b6000806000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611070573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110949190611efe565b50505091505060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b9190611fb2565b60ff16905081819550955050505050915091565b611127611256565b73ffffffffffffffffffffffffffffffffffffffff16611145610d5e565b73ffffffffffffffffffffffffffffffffffffffff161461119b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611192906117ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561120b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120290612051565b60405180910390fd5b6112148161125e565b50565b6007818154811061122757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116113fe576001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113f69190611daf565b925050819055505b5050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143282611407565b9050919050565b600061144482611427565b9050919050565b61145481611439565b811461145f57600080fd5b50565b6000813590506114718161144b565b92915050565b60006020828403121561148d5761148c611402565b5b600061149b84828501611462565b91505092915050565b6114ad81611427565b81146114b857600080fd5b50565b6000813590506114ca816114a4565b92915050565b600080604083850312156114e7576114e6611402565b5b60006114f5858286016114bb565b925050602061150685828601611462565b9150509250929050565b6000819050919050565b61152381611510565b82525050565b600060208201905061153e600083018461151a565b92915050565b61154d81611427565b82525050565b60006020820190506115686000830184611544565b92915050565b6000819050919050565b600061159361158e61158984611407565b61156e565b611407565b9050919050565b60006115a582611578565b9050919050565b60006115b78261159a565b9050919050565b6115c7816115ac565b82525050565b60006020820190506115e260008301846115be565b92915050565b6115f181611510565b81146115fc57600080fd5b50565b60008135905061160e816115e8565b92915050565b6000806040838503121561162b5761162a611402565b5b6000611639858286016115ff565b925050602061164a85828601611462565b9150509250929050565b60006020828403121561166a57611669611402565b5b6000611678848285016114bb565b91505092915050565b6000806040838503121561169857611697611402565b5b60006116a685828601611462565b92505060206116b7858286016114bb565b9150509250929050565b600080604083850312156116d8576116d7611402565b5b60006116e6858286016114bb565b92505060206116f7858286016115ff565b9150509250929050565b60008115159050919050565b61171681611701565b82525050565b6000602082019050611731600083018461170d565b92915050565b600060408201905061174c600083018561151a565b611759602083018461151a565b9392505050565b60006020828403121561177657611775611402565b5b6000611784848285016115ff565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117d460208361178d565b91506117df8261179e565b602082019050919050565b60006020820190508181036000830152611803816117c7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156118905780860481111561186c5761186b61180a565b5b600185161561187b5780820291505b808102905061188985611839565b9450611850565b94509492505050565b6000826118a95760019050611965565b816118b75760009050611965565b81600181146118cd57600281146118d757611906565b6001915050611965565b60ff8411156118e9576118e861180a565b5b8360020a915084821115611900576118ff61180a565b5b50611965565b5060208310610133831016604e8410600b841016171561193b5782820a9050838111156119365761193561180a565b5b611965565b6119488484846001611846565b9250905081840481111561195f5761195e61180a565b5b81810290505b9392505050565b600061197782611510565b915061198283611510565b92506119af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611899565b905092915050565b60006119c282611510565b91506119cd83611510565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a0657611a0561180a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a4b82611510565b9150611a5683611510565b925082611a6657611a65611a11565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611aa7601f8361178d565b9150611ab282611a71565b602082019050919050565b60006020820190508181036000830152611ad681611a9a565b9050919050565b7f5374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b6000611b13601b8361178d565b9150611b1e82611add565b602082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b6000611b5482611510565b9150611b5f83611510565b925082821015611b7257611b7161180a565b5b828203905092915050565b6000604082019050611b926000830185611544565b611b9f602083018461151a565b9392505050565b611baf81611701565b8114611bba57600080fd5b50565b600081519050611bcc81611ba6565b92915050565b600060208284031215611be857611be7611402565b5b6000611bf684828501611bbd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c3982611510565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c6c57611c6b61180a565b5b600182019050919050565b7f416d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b6000611cad60128361178d565b9150611cb882611c77565b602082019050919050565b60006020820190508181036000830152611cdc81611ca0565b9050919050565b7f546f6b656e2069736e277420616c6c6f77656400000000000000000000000000600082015250565b6000611d1960138361178d565b9150611d2482611ce3565b602082019050919050565b60006020820190508181036000830152611d4881611d0c565b9050919050565b6000606082019050611d646000830186611544565b611d716020830185611544565b611d7e604083018461151a565b949350505050565b6000604082019050611d9b60008301856115be565b611da8602083018461151a565b9392505050565b6000611dba82611510565b9150611dc583611510565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611dfa57611df961180a565b5b828201905092915050565b7f4e6f20746f6b656e207374616b65640000000000000000000000000000000000600082015250565b6000611e3b600f8361178d565b9150611e4682611e05565b602082019050919050565b60006020820190508181036000830152611e6a81611e2e565b9050919050565b600069ffffffffffffffffffff82169050919050565b611e9081611e71565b8114611e9b57600080fd5b50565b600081519050611ead81611e87565b92915050565b6000819050919050565b611ec681611eb3565b8114611ed157600080fd5b50565b600081519050611ee381611ebd565b92915050565b600081519050611ef8816115e8565b92915050565b600080600080600060a08688031215611f1a57611f19611402565b5b6000611f2888828901611e9e565b9550506020611f3988828901611ed4565b9450506040611f4a88828901611ee9565b9350506060611f5b88828901611ee9565b9250506080611f6c88828901611e9e565b9150509295509295909350565b600060ff82169050919050565b611f8f81611f79565b8114611f9a57600080fd5b50565b600081519050611fac81611f86565b92915050565b600060208284031215611fc857611fc7611402565b5b6000611fd684828501611f9d565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061203b60268361178d565b915061204682611fdf565b604082019050919050565b6000602082019050818103600083015261206a8161202e565b905091905056fea2646970667358221220c2ea4a64611c2747f0e77f8b5c6307d781d24dbb082d13595fbaec758a57ccdd64736f6c634300080c0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Staking";
  }

  deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly contractName: "Staking";
  public readonly contractName: "Staking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
