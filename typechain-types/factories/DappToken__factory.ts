/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DappToken, DappTokenInterface } from "../DappToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200198c3803806200198c8339818101604052810190620000379190620003d7565b6040518060400160405280600a81526020017f4461707020546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f44415050000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002bd565b508060049080519060200190620000d4929190620002bd565b505050620000f281683635c9adc5dea000006200013a60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005b5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001ad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a4906200046a565b60405180910390fd5b620001c160008383620002b360201b60201c565b8060026000828254620001d59190620004c5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200022c9190620004c5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000293919062000533565b60405180910390a3620002af60008383620002b860201b60201c565b5050565b505050565b505050565b828054620002cb906200057f565b90600052602060002090601f016020900481019282620002ef57600085556200033b565b82601f106200030a57805160ff19168380011785556200033b565b828001600101855582156200033b579182015b828111156200033a5782518255916020019190600101906200031d565b5b5090506200034a91906200034e565b5090565b5b80821115620003695760008160009055506001016200034f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200039f8262000372565b9050919050565b620003b18162000392565b8114620003bd57600080fd5b50565b600081519050620003d181620003a6565b92915050565b600060208284031215620003f057620003ef6200036d565b5b60006200040084828501620003c0565b91505092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000452601f8362000409565b91506200045f826200041a565b602082019050919050565b60006020820190508181036000830152620004858162000443565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004d2826200048c565b9150620004df836200048c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000517576200051662000496565b5b828201905092915050565b6200052d816200048c565b82525050565b60006020820190506200054a600083018462000522565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200059857607f821691505b60208210811415620005af57620005ae62000550565b5b50919050565b6113c780620005c56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780638da5cb5b146101d357806395d89b41146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190610c57565b60405180910390f35b6100f160048036038101906100ec9190610d12565b610331565b6040516100fe9190610d6d565b60405180910390f35b61010f610354565b60405161011c9190610d97565b60405180910390f35b61013f600480360381019061013a9190610db2565b61035e565b60405161014c9190610d6d565b60405180910390f35b61015d61038d565b60405161016a9190610e21565b60405180910390f35b61018d60048036038101906101889190610d12565b610396565b60405161019a9190610d6d565b60405180910390f35b6101bd60048036038101906101b89190610e3c565b610440565b6040516101ca9190610d97565b60405180910390f35b6101db610488565b6040516101e89190610e78565b60405180910390f35b6101f96104ae565b6040516102069190610c57565b60405180910390f35b61022960048036038101906102249190610d12565b610540565b6040516102369190610d6d565b60405180910390f35b61025960048036038101906102549190610d12565b61062a565b6040516102669190610d6d565b60405180910390f35b61028960048036038101906102849190610e93565b61064d565b6040516102969190610d97565b60405180910390f35b6060600380546102ae90610f02565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610f02565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60008061033c6106d4565b90506103498185856106dc565b600191505092915050565b6000600254905090565b6000806103696106d4565b90506103768582856108a7565b610381858585610933565b60019150509392505050565b60006012905090565b6000806103a16106d4565b9050610435818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104309190610f63565b6106dc565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104bd90610f02565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610f02565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b5050505050905090565b60008061054b6106d4565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610611576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106089061102b565b60405180910390fd5b61061e82868684036106dc565b60019250505092915050565b6000806106356106d4565b9050610642818585610933565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561074c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610743906110bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b39061114f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161089a9190610d97565b60405180910390a3505050565b60006108b3848461064d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461092d578181101561091f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906111bb565b60405180910390fd5b61092c84848484036106dc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a9061124d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a906112df565b60405180910390fd5b610a1e838383610bb4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b90611371565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b379190610f63565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9b9190610d97565b60405180910390a3610bae848484610bb9565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bf8578082015181840152602081019050610bdd565b83811115610c07576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c2982610bbe565b610c338185610bc9565b9350610c43818560208601610bda565b610c4c81610c0d565b840191505092915050565b60006020820190508181036000830152610c718184610c1e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ca982610c7e565b9050919050565b610cb981610c9e565b8114610cc457600080fd5b50565b600081359050610cd681610cb0565b92915050565b6000819050919050565b610cef81610cdc565b8114610cfa57600080fd5b50565b600081359050610d0c81610ce6565b92915050565b60008060408385031215610d2957610d28610c79565b5b6000610d3785828601610cc7565b9250506020610d4885828601610cfd565b9150509250929050565b60008115159050919050565b610d6781610d52565b82525050565b6000602082019050610d826000830184610d5e565b92915050565b610d9181610cdc565b82525050565b6000602082019050610dac6000830184610d88565b92915050565b600080600060608486031215610dcb57610dca610c79565b5b6000610dd986828701610cc7565b9350506020610dea86828701610cc7565b9250506040610dfb86828701610cfd565b9150509250925092565b600060ff82169050919050565b610e1b81610e05565b82525050565b6000602082019050610e366000830184610e12565b92915050565b600060208284031215610e5257610e51610c79565b5b6000610e6084828501610cc7565b91505092915050565b610e7281610c9e565b82525050565b6000602082019050610e8d6000830184610e69565b92915050565b60008060408385031215610eaa57610ea9610c79565b5b6000610eb885828601610cc7565b9250506020610ec985828601610cc7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f1a57607f821691505b60208210811415610f2e57610f2d610ed3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6e82610cdc565b9150610f7983610cdc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fae57610fad610f34565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611015602583610bc9565b915061102082610fb9565b604082019050919050565b6000602082019050818103600083015261104481611008565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006110a7602483610bc9565b91506110b28261104b565b604082019050919050565b600060208201905081810360008301526110d68161109a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611139602283610bc9565b9150611144826110dd565b604082019050919050565b600060208201905081810360008301526111688161112c565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006111a5601d83610bc9565b91506111b08261116f565b602082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611237602583610bc9565b9150611242826111db565b604082019050919050565b600060208201905081810360008301526112668161122a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006112c9602383610bc9565b91506112d48261126d565b604082019050919050565b600060208201905081810360008301526112f8816112bc565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061135b602683610bc9565b9150611366826112ff565b604082019050919050565b6000602082019050818103600083015261138a8161134e565b905091905056fea2646970667358221220deb7b5156d633eda758da8ddb6e96e2fe351d46e42f56c113572704a15de255f64736f6c634300080c0033";

type DappTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DappTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DappToken__factory extends ContractFactory {
  constructor(...args: DappTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DappToken";
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DappToken> {
    return super.deploy(_owner, overrides || {}) as Promise<DappToken>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): DappToken {
    return super.attach(address) as DappToken;
  }
  connect(signer: Signer): DappToken__factory {
    return super.connect(signer) as DappToken__factory;
  }
  static readonly contractName: "DappToken";
  public readonly contractName: "DappToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DappTokenInterface {
    return new utils.Interface(_abi) as DappTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DappToken {
    return new Contract(address, _abi, signerOrProvider) as DappToken;
  }
}
